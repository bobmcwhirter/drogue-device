       Fresh unicode-xid v0.2.2
       Fresh autocfg v1.0.1
       Fresh version_check v0.9.3
       Fresh lazy_static v1.4.0
       Fresh semver-parser v0.7.0
       Fresh regex-syntax v0.6.25
       Fresh strsim v0.10.0
       Fresh scopeguard v1.1.0
       Fresh unicode-segmentation v1.8.0
       Fresh hashbrown v0.11.2
       Fresh linked-hash-map v0.5.4
       Fresh termcolor v1.1.2
       Fresh unicode-width v0.1.9
       Fresh either v1.6.1
       Fresh humantime v2.1.0
       Fresh dtoa v0.4.8
       Fresh once_cell v1.8.0
       Fresh inflections v1.1.1
       Fresh ident_case v1.0.1
       Fresh bitflags v1.3.2
       Fresh fnv v1.0.7
       Fresh defmt-parser v0.3.0
       Fresh futures-sink v0.3.18
       Fresh cfg-if v1.0.0
       Fresh pin-utils v0.1.0
       Fresh byteorder v1.4.3
       Fresh bare-metal v1.0.0
       Fresh nb v1.0.0
       Fresh pin-project-lite v0.2.7
       Fresh futures-io v0.3.18
       Fresh void v1.0.2
       Fresh vcell v0.1.3
       Fresh stable_deref_trait v1.2.0
       Fresh bitfield v0.13.2
       Fresh usb-device v0.2.8
       Fresh rand_core v0.6.3
       Fresh base64 v0.13.0
       Fresh sdio-host v0.5.0
       Fresh seq-macro v0.2.2
       Fresh semver v0.9.0
       Fresh heck v0.3.3
       Fresh xml-rs v0.7.0
       Fresh yaml-rust v0.4.5
       Fresh textwrap v0.14.2
       Fresh bxcan v0.6.2
       Fresh nb v0.1.3
       Fresh hash32 v0.2.1
       Fresh proc-macro2 v1.0.32
       Fresh volatile-register v0.2.1
       Fresh memchr v2.4.1
       Fresh rustc_version v0.2.3
       Fresh libc v0.2.108
       Fresh crossbeam-utils v0.8.5
       Fresh semver v1.0.4
       Fresh xmltree v0.8.0
       Fresh log v0.4.14
       Fresh anyhow v1.0.51
       Fresh futures-core v0.3.18
       Fresh futures-task v0.3.18
       Fresh quote v1.0.10
       Fresh aho-corasick v0.7.18
       Fresh memoffset v0.6.4
       Fresh num_cpus v1.13.0
       Fresh indexmap v1.7.0
       Fresh atty v0.2.14
       Fresh os_str_bytes v4.2.0
       Fresh embedded-hal v0.2.6
       Fresh heapless v0.7.8
       Fresh rustc_version v0.4.0
       Fresh crossbeam-channel v0.5.1
       Fresh unicase v2.6.0
       Fresh embassy-traits v0.1.0 (https://github.com/embassy-rs/embassy.git?rev=c8f3ec3fba47899b123d0a146e8f9b3808ea4601#c8f3ec3f)
       Fresh num-traits v0.2.14
       Fresh syn v1.0.82
       Fresh proc-macro-error-attr v1.0.4
       Fresh regex v1.5.4
       Fresh crossbeam-epoch v0.9.5
       Fresh futures-channel v0.3.18
       Fresh proc-macro-error v1.0.4
       Fresh crossbeam-deque v0.8.1
       Fresh thiserror-impl v1.0.30
       Fresh serde_derive v1.0.130
       Fresh env_logger v0.9.0
       Fresh darling_core v0.13.0
       Fresh riscv-target v0.1.2
       Fresh futures-macro v0.3.18
       Fresh cortex-m-rt-macros v0.7.0
       Fresh pin-project-internal v1.0.8
       Fresh rayon-core v1.9.1
       Fresh clap_derive v3.0.0-beta.5
       Fresh thiserror v1.0.30
       Fresh serde v1.0.130
       Fresh defmt-macros v0.3.1
       Fresh darling_macro v0.13.0
       Fresh futures-util v0.3.18
       Fresh bare-metal v0.2.5
       Fresh cortex-m-rt v0.7.1
       Fresh rayon v1.5.1
       Fresh serde_yaml v0.8.21
       Fresh clap v3.0.0-beta.5
       Fresh cast v0.2.7
       Fresh defmt v0.3.0
       Fresh darling v0.13.0
       Fresh critical-section v0.2.5
       Fresh futures v0.3.18
       Fresh pin-project v1.0.8
       Fresh cortex-m v0.7.3
       Fresh svd-parser v0.10.2
       Fresh embassy-macros v0.1.0 (https://github.com/embassy-rs/embassy.git?rev=c8f3ec3fba47899b123d0a146e8f9b3808ea4601#c8f3ec3f)
       Fresh atomic-polyfill v0.1.5
       Fresh panic-probe v0.3.0
       Fresh defmt-rtt v0.3.1
       Fresh chiptool v0.1.0 (https://github.com/embassy-rs/chiptool?rev=31c3c09197d63d29eddbf4c70d6158edac0ac5d3#31c3c091)
       Fresh embassy v0.1.0 (https://github.com/embassy-rs/embassy.git?rev=c8f3ec3fba47899b123d0a146e8f9b3808ea4601#c8f3ec3f)
       Fresh stm32-metapac-gen v0.1.0 (https://github.com/embassy-rs/embassy.git?rev=c8f3ec3fba47899b123d0a146e8f9b3808ea4601#c8f3ec3f)
       Fresh embassy-hal-common v0.1.0 (https://github.com/embassy-rs/embassy.git?rev=c8f3ec3fba47899b123d0a146e8f9b3808ea4601#c8f3ec3f)
       Fresh drogue-device v0.1.0 (/Users/bob/repos/drogue-device/device)
warning: unused import: `embassy::traits::gpio::WaitForAnyEdge`
 --> /Users/bob/repos/drogue-device/device/src/actors/button.rs:4:5
  |
4 | use embassy::traits::gpio::WaitForAnyEdge;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `embedded_hal::digital::v2::InputPin`
 --> /Users/bob/repos/drogue-device/device/src/actors/button.rs:5:5
  |
5 | use embedded_hal::digital::v2::InputPin;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `core::marker::PhantomData`
  --> /Users/bob/repos/drogue-device/device/src/actors/led/mod.rs:10:5
   |
10 | use core::marker::PhantomData;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `OutputPin`, `PinState`
  --> /Users/bob/repos/drogue-device/device/src/actors/led/mod.rs:11:33
   |
11 | use embedded_hal::digital::v2::{OutputPin, PinState};
   |                                 ^^^^^^^^^  ^^^^^^^^

warning: unnecessary parentheses around `match` scrutinee expression
  --> /Users/bob/repos/drogue-device/device/src/actors/led/mod.rs:84:31
   |
84 |                         match (match new_state {
   |                               ^
...
87 |                         }) {
   |                          ^
   |
   = note: `#[warn(unused_parens)]` on by default
help: remove these parentheses
   |
84 ~                         match match new_state {
85 |                             true => self.led.on(),
86 |                             false => self.led.off(),
87 ~                         } {
   |

warning: `drogue-device` (lib) generated 5 warnings
       Fresh bsp-blinky-app v0.1.0 (/Users/bob/repos/drogue-device/examples/bsp/app)
warning: unused import: `drogue_device::kernel::actor::InboxMessage`
 --> /Users/bob/repos/drogue-device/examples/bsp/app/src/lib.rs:9:5
  |
9 | use drogue_device::kernel::actor::InboxMessage;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `DeviceContext`
  --> /Users/bob/repos/drogue-device/examples/bsp/app/src/lib.rs:12:29
   |
12 | use drogue_device::{traits, DeviceContext};
   |                             ^^^^^^^^^^^^^

warning: unnecessary parentheses around type
  --> /Users/bob/repos/drogue-device/examples/bsp/app/src/lib.rs:60:26
   |
60 |     type Configuration = (Address<'static, actors::led::Led<B::RedLed>>);
   |                          ^                                             ^
   |
   = note: `#[warn(unused_parens)]` on by default
help: remove these parentheses
   |
60 -     type Configuration = (Address<'static, actors::led::Led<B::RedLed>>);
60 +     type Configuration = Address<'static, actors::led::Led<B::RedLed>>;
   | 

warning: variable does not need to be mutable
  --> /Users/bob/repos/drogue-device/examples/bsp/app/src/lib.rs:42:13
   |
42 |         let mut components = board.components();
   |             ----^^^^^^^^^^
   |             |
   |             help: remove this `mut`
   |
   = note: `#[warn(unused_mut)]` on by default

warning: field is never read: `led`
   --> /Users/bob/repos/drogue-device/examples/bsp/app/src/lib.rs:111:5
    |
111 |     led: ActorContext<'static, actors::led::Led<B::RedLed>>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: field is never read: `button`
   --> /Users/bob/repos/drogue-device/examples/bsp/app/src/lib.rs:112:5
    |
112 | /     button: ActorContext<
113 | |         'static,
114 | |         actors::button::Button<B::ControlButton, ButtonEventDispatcher<BlinkyApp<B>>>,
115 | |     >,
    | |_____^

warning: unused `Result` that must be used
  --> /Users/bob/repos/drogue-device/examples/bsp/app/src/lib.rs:83:29
   |
83 | ...                   self.red_led.unwrap().notify(LedMessage::On);
   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_must_use)]` on by default
   = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `Result` that must be used
  --> /Users/bob/repos/drogue-device/examples/bsp/app/src/lib.rs:86:29
   |
86 | ...                   self.red_led.unwrap().notify(LedMessage::Off);
   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this `Result` may be an `Err` variant, which should be handled

warning: `bsp-blinky-app` (lib) generated 8 warnings
   Compiling stm32-metapac v0.1.0 (https://github.com/embassy-rs/embassy.git?rev=c8f3ec3fba47899b123d0a146e8f9b3808ea4601#c8f3ec3f)
     Running `rustc --crate-name stm32_metapac --edition=2018 /Users/bob/.cargo/git/checkouts/embassy-9312dcb0ed774b29/c8f3ec3/stm32-metapac/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C split-debuginfo=unpacked -C debuginfo=2 --cfg 'feature="cortex-m-rt"' --cfg 'feature="memory-x"' --cfg 'feature="rt"' --cfg 'feature="stm32u585ai"' -C metadata=2bd44f034db67982 -C extra-filename=-2bd44f034db67982 --out-dir /Users/bob/repos/drogue-device/examples/bsp/iot02a/target/debug/deps -L dependency=/Users/bob/repos/drogue-device/examples/bsp/iot02a/target/debug/deps --extern cortex_m=/Users/bob/repos/drogue-device/examples/bsp/iot02a/target/debug/deps/libcortex_m-341613aeba75cb5e.rmeta --extern cortex_m_rt=/Users/bob/repos/drogue-device/examples/bsp/iot02a/target/debug/deps/libcortex_m_rt-8be8d5273c1b6ceb.rmeta --cap-lints allow -L /Users/bob/repos/drogue-device/examples/bsp/iot02a/target/debug/build/stm32-metapac-16b9744bfcf8ad03/out/src/chips/stm32u585ai -L /Users/bob/repos/drogue-device/examples/bsp/iot02a/target/debug/build/stm32-metapac-16b9744bfcf8ad03/out/src/chips/stm32u585ai/memory_x/ -L /Users/bob/repos/drogue-device/examples/bsp/iot02a/target/debug/build/cortex-m-rt-fbd0f0ccd9bafa36/out`
LLVM ERROR: Global variable '__INTERRUPTS' has an invalid section specifier '.vector_table.interrupts': mach-o section specifier requires a segment and section separated by a comma.
error: could not compile `stm32-metapac`

Caused by:
  process didn't exit successfully: `rustc --crate-name stm32_metapac --edition=2018 /Users/bob/.cargo/git/checkouts/embassy-9312dcb0ed774b29/c8f3ec3/stm32-metapac/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C split-debuginfo=unpacked -C debuginfo=2 --cfg 'feature="cortex-m-rt"' --cfg 'feature="memory-x"' --cfg 'feature="rt"' --cfg 'feature="stm32u585ai"' -C metadata=2bd44f034db67982 -C extra-filename=-2bd44f034db67982 --out-dir /Users/bob/repos/drogue-device/examples/bsp/iot02a/target/debug/deps -L dependency=/Users/bob/repos/drogue-device/examples/bsp/iot02a/target/debug/deps --extern cortex_m=/Users/bob/repos/drogue-device/examples/bsp/iot02a/target/debug/deps/libcortex_m-341613aeba75cb5e.rmeta --extern cortex_m_rt=/Users/bob/repos/drogue-device/examples/bsp/iot02a/target/debug/deps/libcortex_m_rt-8be8d5273c1b6ceb.rmeta --cap-lints allow -L /Users/bob/repos/drogue-device/examples/bsp/iot02a/target/debug/build/stm32-metapac-16b9744bfcf8ad03/out/src/chips/stm32u585ai -L /Users/bob/repos/drogue-device/examples/bsp/iot02a/target/debug/build/stm32-metapac-16b9744bfcf8ad03/out/src/chips/stm32u585ai/memory_x/ -L /Users/bob/repos/drogue-device/examples/bsp/iot02a/target/debug/build/cortex-m-rt-fbd0f0ccd9bafa36/out` (exit status: 101)




























































ZZ
